#GoMediaServer TOML Config file

#for \ needed \\ on strings
#windows path needed full path

appname = "GMS"
appversion = "0.5"
#Show msgs info on cmd, error msg are printed allways
debug = true
#Video file forced on debug mode if requested video file not exist (fullpath)
debugfile = ""

[Server]

#IP to bind server or empty all IPs
bindip = "127.0.0.1"
bindport = "8080"

#Active HTTPS with cert files
https       = true
httpscrt    = "./certificate.crt"
httpskey    = "./private.key"

[GeoIP]

#Safe IPs full or partial (preffix)
geoipsafe   = [
    "localhost",
    "127.0.0.1",
    "192.168.1.",
    "10.0.0.",
]
#Country list accepted from country name or code (http://www.geoplugin.net)
geoipfilter = [ 
    "Spain",
    "ES",
    "NL",
]

[Ffmpeg]

ffmpegcmd       = "ffmpeg"
ffprobecmd      = "ffprobe"
#ffmpeg bit rate for LOW QUALITY in ffmpeg format
ffmpegminbrlq   = "1M"
ffmpegmaxbrlq   = "2M"
#ffmpeg bit rate for HIGH QUALITY in ffmpeg format
ffmpegminbrhq   = "2M"
ffmpegmaxbrhq   = "2M"

[DataBase]

#dbfile = "./cache/data.db"
dbfile = "./cache/data.db?cache=shared&journal_mode=MEMORY&synchronous=OFF&temp_store=MEMORY&case_sensitive_like=false"

[Sessions]

#16, 24 or 32 bytes string
sessionkey = "super-secret-key"

[Menu]

#Menu genres for search
genres = [
    "Comedia", 
    "Acción", 
    "Ficción", 
    "Misterio", 
    "Terror", 
    "Familia", 
    "Documental"
]

#Menu genres extra search for eng detect, same position like genres
genresadapt = [
    "Comed", 
    "Action", 
    "Fiction", 
    "Mistery", 
    "Horror", 
    "Family", 
    "Docu"
]

[Downloads]

#Folder to scan for new files
serverfolder = "./cache/downloads"
#Exclude folders/files containing any
serverfolderexc = [
    ".part",
    ".part.met",
    ".tmp",
    '.!qB', 
    '.sub',
    '.str',
    '.url',
]

#days to wait before remove duplicates (safeseeding)
removesafedays = 7
#min size (MB) to priority delete duplicates (filesize>this have preference)
removesizepriority = 4096
#Low disk free space to clean in GB
downloadslowspace = 200
#On low free space mode to clean: 
#old : old files downloaded first
#bigsize : big files first
#releaseold : media old date of release first
downloadscleanmode = "old"
#remove old (removesafedays) low disk space folders on download folder with less than MB
removeolddirssize = 5

[FileInfoTags]

#Tags to file extracted from filename(tag=regexpinfo)
480p = "(480(p)?)"
720p = "(720(p)?)"
1080p = "(1080(p)?)"
#Video Type
HDCam = "(hd(\\W){1}cam)"
Screener = "(screen(er)?|(\\Wts\\W))"
HDScreener = "(hd(\\W)?screen(er)?)"
DVDScreener = "(dvd(\\W)?screen(er)?)"
BRScreener = "(br(\\W)?screen(er)?)"
DVD = "(dvd)"
BDRip = "(blueray|bluray|bdrip)"
MicroHD = "(micro(\\W)?hd)"
HDRip = "(hd(\\W)?rip)"
HDTV = "(hd(\\W)?tv)"
TVRip = "(tv(\\W)?rip)"
WEBDL = "(web(\\W)?dl)"
SATRip = "(sat(\\W)?rip)"
#lang
LATINO = "(latino)"
ESP = "((^sub(\\W)?)?castellano|(^sub(\\W)?)?español|(^sub(\\W)?)?esp|(^sub(\\W)?)?spanish|(^sub(\\W)?)?spa(\\W)?)"
ENG = "(eng(lish)?)"
SUB = "(v\\.o\\.s\\.e|v\\.o(\\.)?|sub(\\W)?(esp|eng|lat|bed|b|ti)?)"

[Lists]

# Long list with pages
longsize = 126 #+1 +1 back next
# Short list like related or frontal
shortsize = 16 

[Cron]

#shortcron in cron format (empty disabled): "", "0 30 * * * *", "@hourly", "@every 1h30m"
#shotcron search for new files and identify
cronshorttime = "@hourly"
#longcron in cron format (empty disabled): "", "0 30 * * * *", "@hourly", "@every 1h30m"
#longcron clean duplicate files, clean old db entrys and clean hd on lowfreespace 
cronlongtime = "@every 8h"

[FileScrapp]

#mydb, filebot, pymi, thetvdb, omdb, imdb (recommended: filebot and pymi)
cronscrapper = "filebot"
#list of regexp to clean titles from filename
titleclean = [
    "\\(.*\\)",
    "\\[.*\\]",
    "([wW]{3}|)\\.{0,1}[A-Za-z0-9]+?\\.(com|net|org|es|co|nz|eu|ru|to|watch|tv)[^A-Za-z0-9]",
    #Languaje
    "English",
    "Spanish",
    "Latino",
    #Video Format
    "4K", 
    "DVB", 
    "FullBluRay", 
    "BDRemux",
    "bdScreener",
    "dvdScreener",
    "Screener",
    "TS-Screeener",
    "TSScreeener",
    "TV-Screeener",
    "TVScreeener",
    "La-Screeener",
    "LaScreeener",
    "Screeener",
    "TS-Screener",
    "TSScreener",
    "TV-Screener",
    "TVScreener",
    "La-Screener",
    "LaScreener",
    "Screener",
    "BluRay", 
    "BlueRay", 
    "MicroHD", 
    "DVD",
    "HD",
    "DVD",
    "DVDRip",
    "HDRip",
    "BRRip",
    "1080",
    "720",
    "1080p",
    "720p",
    "Subs",
    "FullBluRay", 
    "BDRemux",
    "BluRay", 
    "BlueRay", 
    "MicroHD", 
    "DVD",
    "HD",
    "DVD",
    "1080",
    "720",
    "1080p",
    "720p",
    "Br-Line",
    "XVID",
    "AC3",
    "480p",
    "2ch",
    "3ch",
    "4ch",
    "5ch",
    "6ch",
    "7ch",
    " Rip",
    "divx",
    "xvid",
    " TV",
    "\\.mp4a",
    "\\.avi",
    "\\.mpg",
    "\\.mpeg",
    "\\.mkv",
    "\\.mp4",
    #Web Words
    "(TV Serie)",
    "(Serie de TV)",
    "online",
    "torrent",
    "Movies",
    " Rip",
    "p2p",
]
#regexp seasonxchapter detect
seasonepisodedetect = [
    '([0-9]{1,2}) {0,1}[x,X]([0-9]{1,3})',
    '[s,S]?([0-9]{1,2}) {0,1}[e,E]([0-9]{1,3})',
    '([0-9]{1,2}) {0,1}×([0-9]{1,3})',
    'Cap.{0,5}([0-9]{1,2}) {0,1}([0-9]{2,3})',
    '([0-9]{1,2}) {0,1}([0-9]{2})',
    '([0-9]{1,2}) {0,1}([0-9]{2,3})',
    'Season\s*([0-9]{1,2}) {0,1}[\w\s]*Chapter\s*([0-9]{1,3})',
    'Temporada\s*([0-9]{1,2}) {0,1}[\w\s]*Capitulo\s*([0-9]{1,3})',
    '[s,S,t,T]?([0-9]{1,2}) {0,1}[x,X][e,E]([0-9]{1,3})'
]
#excluded strings on season x episode detection
seasonepisodeexclude = [
    "1080", 
    "720", 
    "480", 
    "360", 
    "1024", 
    "264", 
    "265"
]
#Max season to detect
seasonmax = 30
#Max episode to detect
episodemax = 300

[Filebot]

filebotcmd  = "filebot"
filebotlang = "es"

[OMDb]

#get from https://www.omdbapi.com/
omdbapikey = ""

[TheTVDB]

#get from https://www.thetvdb.com/
thetvdbapikey = "120F8A1A0E6322F3"
#Languaje to ident: en, es, ...
thetvdblang = "es"

[pymi]

pymicmd = "pymediaident.py"
pymilang = "es"
